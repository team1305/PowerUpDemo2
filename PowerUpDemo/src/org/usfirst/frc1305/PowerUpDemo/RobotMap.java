// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1305.PowerUpDemo;

import com.ctre.phoenix.motorcontrol.can.TalonSRX;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController intakeArmLeft;
    public static SpeedController intakeArmRight;
    public static Solenoid intakeClawLeft;
    public static Solenoid intakeClawRight;
    public static WPI_TalonSRX driveDriveLeft1;
    public static WPI_TalonSRX driveDriveRight1;
    public static DifferentialDrive driverobotdrive;
    public static WPI_TalonSRX elevatorStage1L;
    public static WPI_TalonSRX elevatorStage1R;
    public static WPI_VictorSPX elevatorStage2;
    public static Solenoid elevatorArmLiftLeft;
    public static Solenoid elevatorArmLiftRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static WPI_TalonSRX driveDriveLeft2;
    public static WPI_TalonSRX driveDriveLeft3;
    public static WPI_TalonSRX driveDriveRight2;
    public static WPI_TalonSRX driveDriveRight3;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        intakeArmLeft = new Spark(7);
        LiveWindow.addActuator("Intake", "ArmLeft", (Spark) intakeArmLeft);
        intakeArmLeft.setInverted(false);
        intakeArmRight = new Spark(8);
        LiveWindow.addActuator("Intake", "ArmRight", (Spark) intakeArmRight);
        intakeArmRight.setInverted(false);
        intakeClawLeft = new Solenoid(16, 0);
        LiveWindow.addActuator("Intake", "ClawLeft", intakeClawLeft);
        
        intakeClawRight = new Solenoid(17, 0);
        LiveWindow.addActuator("Intake", "ClawRight", intakeClawRight);
        
        driveDriveLeft1 = new WPI_TalonSRX(0);
        
        
        driveDriveRight1 = new WPI_TalonSRX(1);
        
        
        driverobotdrive = new DifferentialDrive(driveDriveLeft1, driveDriveRight1);
        LiveWindow.addActuator("Drive", "robotdrive", driverobotdrive);
        driverobotdrive.setSafetyEnabled(true);
        driverobotdrive.setExpiration(0.1);
        driverobotdrive.setMaxOutput(1.0);

        elevatorStage1L = new WPI_TalonSRX(11);
        
        
        elevatorStage1R = new WPI_TalonSRX(12);
        
        
        elevatorStage2 = new WPI_VictorSPX(13);
        
        
        elevatorArmLiftLeft = new Solenoid(14, 0);
        LiveWindow.addActuator("Elevator", "ArmLiftLeft", elevatorArmLiftLeft);
        
        elevatorArmLiftRight = new Solenoid(15, 1);
        LiveWindow.addActuator("Elevator", "ArmLiftRight", elevatorArmLiftRight);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        driveDriveLeft2 = new WPI_TalonSRX(2);
        driveDriveLeft3 = new WPI_TalonSRX(4);
        driveDriveRight2 = new WPI_TalonSRX(3);
        driveDriveRight3 = new WPI_TalonSRX(5);
        
    }
}
