// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1305.PowerUpDemo.subsystems;

import org.usfirst.frc1305.PowerUpDemo.Robot;
import org.usfirst.frc1305.PowerUpDemo.RobotMap;
import org.usfirst.frc1305.PowerUpDemo.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	boolean isClawClosed = true;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController armLeft = RobotMap.intakeArmLeft;
    private final SpeedController armRight = RobotMap.intakeArmRight;
    private final Solenoid clawLeft = RobotMap.intakeClawLeft;
    private final Solenoid clawRight = RobotMap.intakeClawRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public NetworkTable LLtable;  
    NetworkTableInstance inst = NetworkTableInstance.getDefault();
    NetworkTableEntry ledmodeEntry;
    NetworkTableEntry xEntry;
    NetworkTableEntry yEntry;

    
    public Intake() {
    	    NetworkTable LLtable = inst.getTable("datatable");
    	    xEntry = LLtable.getEntry("X");
    	    yEntry = LLtable.getEntry("Y");
    	    ledmodeEntry = LLtable.getEntry("ledmode");    	
    	
    }
    
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void ClawOpen() {
    	this.clawLeft.set(false);
    	this.clawRight.set(false);
    	isClawClosed = false;
    }
    
    public void ClawClose() {
    	this.clawLeft.set(true);
    	this.clawRight.set(true);
    	isClawClosed = true;
    	
    }
    
    
    public void toggleClaw() {
    	if (isClawClosed) {
    		ClawOpen();
    	} else {
    		ClawClose();
    	}
    	
    }
   
    
    
    public void intakeSpeed(double nspeed) {
    	armLeft.set(nspeed);
    	armRight.set(nspeed);
    }
    
    public void intakeOff() {
    	armLeft.set(0);
    	armRight.set(0);
    }

    public void setLEDStatus(boolean bstate) {
    	//-0 on 
    	//-1 off 
    	//-2 blink 
    
       int istate;
       
       if (bstate) {
    	   istate = 1;
       } else {
    	   istate = 2;
       }
    	ledmodeEntry.setNumber(istate);  	
    }
   
    
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

